server_name $NGINX_SERVER_NAME;

keepalive_timeout 5;
client_max_body_size 10m;

root /var/www/skylark/public;

access_log /var/www/log/skylark.access.log;
error_log /var/www/log/skylark.error.log info;

if (-f $document_root/maintenance.html) {
  rewrite  ^(.*)$  /maintenance.html last;
  break;
}

location / {
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_redirect off;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header Host $http_host;

  if (-f $request_filename) {
    break;
  }

  if (-f $request_filename/index.html) {
    rewrite (.*) $1/index.html break;
  }

  if (-f $request_filename.html) {
    rewrite (.*) $1.html break;
  }

  if (!-f $request_filename) {
    proxy_pass http://app_backend;
    break;
  }
}

location /websocket {
  proxy_pass http://app_backend;
  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "Upgrade";

  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header Host $http_host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_redirect off;
}

# Fix mini-profiler-resources assets error
location ~* \/mini-profiler-resources {
  proxy_pass http://app_backend;
  break;
}

# Fix sidekiq assets error
location ~* \/sidekiq {
  proxy_pass http://app_backend;
  break;
}

# Fix cms assets error
location ~* \/cms/assets\/  {
  proxy_pass http://app_backend;
  expires max;
  break;
}

# Now this supposedly should work as it gets the filenames with querystrings that Rails provides.
# BUT there's a chance it could break the ajax calls.
location ~ ^/(assets)/ {
  add_header Access-Control-Allow-Origin '*';
  add_header Access-Control-Allow-Headers X-Requested-With;
  add_header Access-Control-Allow-Methods GET;
  expires max;
  break;
}

# Error pages
# error_page 500 502 503 504 /500.html;
location = /500.html {
  root /var/www/skylark/public;
}
